name: Security

on:
  push:
    branches:
      - main
    paths:
      - projects/security/**
      - .github/workflows/security.yml

jobs:
  test38:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install Poetry
        uses: snok/install-poetry@v1.1.1
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox
      - name: Load cached venv
        id: cached-dependencies
        uses: actions/cache@v2
        with:
          path: projects/security/.tox
          key: tox-${{ runner.os }}-security-py38
      - name: Test with tox
        run: tox -c projects/security -e py38
  test39:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install Poetry
        uses: snok/install-poetry@v1.1.1
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox
      - name: Load cached venv
        id: cached-dependencies
        uses: actions/cache@v2
        with:
          path: projects/security/.tox
          key: tox-${{ runner.os }}-security-py39
      - name: Test with tox
        run: tox -c projects/security -e py39
  linting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install Poetry
        uses: snok/install-poetry@v1.1.1
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox
      - name: Load cached venv
        id: cached-dependencies
        uses: actions/cache@v2
        with:
          path: projects/security/.tox
          key: tox-${{ runner.os }}-security-linting
      - name: Test with tox
        run: tox -c projects/security -e mypy,pretty,flake8,pylint
  publish:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    needs:
      - test38
      - test39
      - linting
    runs-on: ubuntu-latest
    steps:
      #----------------------------------------------
      #       check-out repo and set-up python
      #----------------------------------------------
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.8
      #----------------------------------------------
      #       install and configure poetry
      #----------------------------------------------
      - name: Install Poetry
        uses: snok/install-poetry@v1.1.1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
      #----------------------------------------------
      #       Publish Library
      #----------------------------------------------
      - run: |
          cd projects/security
          poetry build
          poetry publish --username __token__ --password ${{ secrets.PYPI_API_TOKEN }}
